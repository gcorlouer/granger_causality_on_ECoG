% Simulation parameters - override on command line

if ~exist('p',      'var'), p       = 7;           end % VAR model order
if ~exist('rho',    'var'), rho     = 0.9;         end % VAR spectral radius
if ~exist('cdw',    'var'), cdw     = 1;           end % VAR coefficients decay weighting factor
if ~exist('mii',    'var'), mii     = 2;           end % VAR residuals multi-information (generalised correlation)
if ~exist('regm',   'var'), regm    = 'OLS';       end % VAR model estimation regression mode ('OLS' or 'LWR')
if ~exist('nx',     'var'), nx      = 3;           end % number of target variables
if ~exist('ny',     'var'), ny      = 5;           end % number of source variables
if ~exist('nz',     'var'), nz      = 4;           end % number of conditioning variables
if ~exist('m',      'var'), m       = 100;         end % number of observations per trial
if ~exist('N',      'var'), N       = 100;    end % numbers of trials (can be different)
if ~exist('alpha',  'var'), alpha   = 0.05;        end % Significance level
if ~exist('hbins',  'var'), hbins   = 30;          end % histogram bins
if ~exist('fignum', 'var'), fignum  = 1;           end % figure number
if ~exist('seed',   'var'), seed    = 0;           end % random seed (0 for unseeded)


n = nx+ny+nz;
x = 1:nx;
y = nx+1:nx+ny;

% Generate connectivity matrix
connectivity_matrix = randi([0 1], n);
for i = 1:tsdim
    connectivity_matrix(i,i) = 0;
end

% Generate a random VAR model for condition 1

var_coef = var_rand(n,p,rho,cdw);
corr_res = corr_rand(tsdim,mii); 
X{c} = var_to_tsdata(var_coef,corr_res,m,N);

% Calculate actual GC y -> x

Fa{c} = var_to_mvgc(A,V,x,y);
F = zeros(n,n,N);

% Estimate single trial GC in each condition
for i=1:N
    x = X{c}(:,:,i);
    [A,V] = tsdata_to_var(x,p,regm);
    F(:,:,i) = var_to_mvgc(A,V,x,y);
end

